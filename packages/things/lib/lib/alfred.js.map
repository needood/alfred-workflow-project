{"version":3,"sources":["../../src/lib/alfred.ts"],"names":["alfred","output","setVariable","hasCommand","hasOption","arg","process","env","query","argOption","replace","isNew","newItem","title","subtitle","autocomplete","undefined","valid","icon","path","i18n","Utils","getI18n","statusEntries","Object","entries","status","Array","from","map","key","value","doItem","file_result"],"mappings":"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","sourcesContent":["import { setPrintFormat, format } from \"./print\"\nimport { list } from \"./list\"\nimport { AlfredItem } from \"autocomplete/src\"\nimport Utils from \"./utils\";\n\nexport function alfred({ output, setVariable, hasCommand, hasOption }) {\n    setPrintFormat('alfred')\n    const arg = process.env.query\n    const argOption = (arg||'').replace(/(^| )+([^- ][^ ]+)/g, '')\n    if (!hasOption('index')) {\n        const isNew = hasCommand(\"new [name]\")===1\n        const newItem: AlfredItem = {\n            title: `新建`,\n            subtitle: isNew ? `${arg}` : `new`,\n            autocomplete: isNew ? undefined : `new `,\n            valid: isNew ? true : false,\n            arg: `${arg}`,\n            icon:{\n                path:'./icon/new.png'\n            }\n        }\n        output(newItem)\n        output(format(list()))\n    } else if(hasOption('index')===2){\n        output(format(list()))\n    } else {\n        if (hasCommand('status [status]')) {\n            let i18n = Utils.getI18n()\n            let statusEntries = Object.entries(i18n.status)\n            output(Array.from(statusEntries).map(([key, value]) => {\n                return {\n                    title: `更新为 ${value}`,\n                    subtitle: `${arg} ${value}`,\n                    arg: `${arg} ${value}`,\n                    icon:{\n                        path:`./icon/file_${key}.png`\n                    }\n                }\n            }))\n        }else{\n            const doItem: AlfredItem[] = [{\n                title: `打开`,\n                subtitle: `${argOption} file`,\n                arg: `${argOption} file`,\n                icon:{\n                    path:`./icon/open.png`\n                }\n            },{\n                title: `状态更新`,\n                subtitle: `${argOption} status`,\n                autocomplete: `${argOption} status `,\n                valid:false,\n                icon:{\n                    path:`./icon/update.png`\n                }\n            },{\n                title: `归档`,\n                subtitle: `${argOption} arrival`,\n                arg: `${argOption} arrival `,\n                icon:{\n                    path:`./icon/arrival.png`\n                }\n            }]\n            output(doItem)\n        }\n    }\n\n    if (process.env.file_result) {\n        setVariable('file_result', process.env.file_result)\n    }\n}"],"file":"alfred.js"}