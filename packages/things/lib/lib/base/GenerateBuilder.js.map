{"version":3,"sources":["../../../src/lib/base/GenerateBuilder.ts"],"names":["GenerateBuilder","constructor","path","bodyString","files","setBody","handleBody","forEach","file","fileName","relativePath","fileNameLength","length","numberLength","Utils","getNumberLength","markdownWithPrefixLength","index","getIndexByString","decision","substring","setStart","startSting","startString","setEnd","endString","build","join","results","push","i","currentBodyString"],"mappings":";;;;;;;;;;;AAGA;;AACA;;AAJA;AAMO,MAAMA,eAAN,CAAiD;AAOtDC,EAAAA,WAAW,CAAEC,IAAF,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,UAAL,GAAkB,CAAC,EAAD,CAAlB;AACA,SAAKC,KAAL,GAAa,oBAAS,KAAKF,IAAd,CAAb;AACD;;AAEDG,EAAAA,OAAO,CAAEC,UAAF,EAAmB;AACxB,QAAIF,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAID,UAAU,GAAG,KAAKA,UAAtB;AACA,SAAKC,KAAL,CAAWG,OAAX,CAAoB,UAAUC,IAAV,EAAgB;AAClC,UAAIC,QAAQ,GAAGD,IAAI,CAACE,YAApB;AACA,UAAIC,cAAc,GAAGF,QAAQ,CAACG,MAA9B;AACA,UAAIC,YAAY,GAAGC,eAAMC,eAAN,CAAsBN,QAAtB,IAAkC,IAAIG,MAAzD;AACA,UAAII,wBAAwB,GAAG,MAAMJ,MAArC;;AACA,UAAIK,KAAK,GAAGH,eAAMI,gBAAN,CAAuBT,QAAvB,CAAZ;;AACA,UAAIQ,KAAJ,EAAW;AACT,YAAIE,QAAQ,GAAGV,QAAQ,CAACW,SAAT,CAAmBP,YAAnB,EAAiCF,cAAc,GAAGK,wBAAlD,CAAf;AACAV,QAAAA,UAAU,CAACW,KAAD,EAAQE,QAAR,EAAkBX,IAAlB,EAAwBL,UAAxB,EAAoCC,KAAK,CAACQ,MAA1C,CAAV;AACD;AACF,KAVD;AAWA,WAAO,IAAP;AACD;;AAEDS,EAAAA,QAAQ,CAAEC,UAAF,EAAiC;AACvC,SAAKC,WAAL,GAAmBD,UAAnB;AACA,WAAO,IAAP;AACD;;AAEDE,EAAAA,MAAM,CAAEC,SAAF,EAAiC;AACrC,QAAIA,SAAJ,EAAe;AACb,WAAKA,SAAL,GAAiBA,SAAjB;AACD,KAFD,MAEO,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACxC,WAAKA,SAAL,GAAiB,EAAjB;AACD;;AACD,WAAO,IAAP;AACD;;AAEDC,EAAAA,KAAK,GAAI;AACP,QAAI,OAAO,KAAKH,WAAZ,KAA4B,QAAhC,EAA0C;AACxC,aAAO,KAAKA,WAAL,GAAmB,KAAKpB,UAAL,CAAgBwB,IAAhB,CAAqB,EAArB,CAAnB,GAA8C,KAAKF,SAA1D;AACD;;AACD,QAAI,OAAO,KAAKF,WAAZ,KAA4B,QAAhC,EAA0C;AACxC,UAAIK,OAAmB,GAAG,EAA1B;AACAA,MAAAA,OAAO,CAACC,IAAR,CAAa,KAAKN,WAAlB;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3B,UAAL,CAAgBS,MAApC,EAA4CkB,CAAC,EAA7C,EAAkD;AAChD,YAAIC,iBAAiB,GAAG,KAAK5B,UAAL,CAAgB2B,CAAhB,CAAxB;;AACA,YAAIC,iBAAJ,EAAuB;AACrBH,UAAAA,OAAO,CAACC,IAAR,CAAaE,iBAAb;AACD;AACF;;AACD,aAAOH,OAAP;AACD;;AACD,WAAO,EAAP;AACD;;AA5DqD","sourcesContent":["///<reference path=\"AbstractBuilder.ts\"/>\nimport { AbstractBuilder } from './AbstractBuilder'\n\nimport Utils from '../utils'\nimport { getFiles } from '../file';\n\nexport class GenerateBuilder implements AbstractBuilder {\n  path: string\n  files: [{ relativePath: string }]\n  startString: string | string[]\n  endString: string | string[]\n  bodyString: string[] | any\n\n  constructor (path: string) {\n    this.path = path\n    this.bodyString = ['']\n    this.files = getFiles(this.path)\n  }\n\n  setBody (handleBody: any) {\n    let files = this.files\n    let bodyString = this.bodyString\n    this.files.forEach( function (file) {\n      let fileName = file.relativePath\n      let fileNameLength = fileName.length\n      let numberLength = Utils.getNumberLength(fileName) + '-'.length\n      let markdownWithPrefixLength = '.md'.length\n      let index = Utils.getIndexByString(fileName)\n      if (index) {\n        let decision = fileName.substring(numberLength, fileNameLength - markdownWithPrefixLength)\n        handleBody(index, decision, file, bodyString, files.length)\n      }\n    })\n    return this\n  }\n\n  setStart (startSting: string | string[]) {\n    this.startString = startSting\n    return this\n  }\n\n  setEnd (endString?: string | string[]) {\n    if (endString) {\n      this.endString = endString\n    } else if (typeof endString === 'string') {\n      this.endString = ''\n    }\n    return this\n  }\n\n  build () {\n    if (typeof this.startString === 'string') {\n      return this.startString + this.bodyString.join('') + this.endString\n    }\n    if (typeof this.startString === 'object') {\n      let results: string[][] = []\n      results.push(this.startString)\n      for (let i = 0; i < this.bodyString.length; i ++) {\n        let currentBodyString = this.bodyString[i]\n        if (currentBodyString) {\n          results.push(currentBodyString)\n        }\n      }\n      return results\n    }\n    return ''\n  }\n}\n"],"file":"GenerateBuilder.js"}