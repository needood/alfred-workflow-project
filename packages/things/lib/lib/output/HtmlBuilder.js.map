{"version":3,"sources":["../../../src/lib/output/HtmlBuilder.ts"],"names":["walkSync","require","fs","HtmlBuilder","BasicOutput","buildFunc","files","path","forEach","file","fileName","relativePath","indexOf","fileData","readFileSync","appendFileSync","buildContent","unlinkSync","result","MdHelper","mdRender","output","writeFileSync","workDir"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;AALA,IAAIA,QAAQ,GAAGC,OAAO,aAAtB;;AACA,IAAIC,EAAE,GAAGD,OAAO,MAAhB;;AAMA,MAAME,WAAN,SAA0BC,oBAA1B,CAAsC;AACpCC,EAAAA,SAAS,GAAI;AACX,QAAIC,KAAK,GAAG,oBAAS,KAAKC,IAAd,CAAZ;AACA,QAAIA,IAAI,GAAG,KAAKA,IAAhB;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5B,UAAIC,QAAQ,GAAGD,IAAI,CAACE,YAApB;;AACA,UAAID,QAAQ,KAAK,WAAb,IAA4BA,QAAQ,CAACE,OAAT,CAAiB,KAAjB,MAA4B,CAAC,CAA7D,EAAgE;AAC9D;AACD;;AACD,UAAIC,QAAQ,GAAGX,EAAE,CAACY,YAAH,CAAgBP,IAAI,GAAGG,QAAvB,EAAiC,MAAjC,CAAf;AACAR,MAAAA,EAAE,CAACa,cAAH,CAAkB,WAAlB,EAA+BF,QAAQ,GAAG,MAA1C;AACD,KAPD;AAQD;;AAEDG,EAAAA,YAAY,GAAI;AACd,SAAKX,SAAL;AACA,QAAIQ,QAAQ,GAAGX,EAAE,CAACY,YAAH,CAAgB,WAAhB,EAA6B,OAA7B,CAAf;AACAZ,IAAAA,EAAE,CAACe,UAAH,CAAc,WAAd;AAEA,SAAKC,MAAL,GAAcC,kBAASC,QAAT,CAAkBP,QAAlB,CAAd;AACA,WAAO,KAAKK,MAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAI;AACRnB,IAAAA,EAAE,CAACoB,aAAH,CAAiB,KAAKC,OAAL,GAAe,cAAhC,EAAgD,KAAKL,MAArD,EAA6D,OAA7D;AACD;;AAzBmC;;eA4BvBf,W","sourcesContent":["let walkSync = require('walk-sync')\nlet fs = require('fs')\n\nimport MdHelper from '../helpers/MdHelper'\nimport BasicOutput from './BasicOutput'\nimport { getFiles } from '../file';\n\nclass HtmlBuilder extends BasicOutput {\n  buildFunc () {\n    let files = getFiles(this.path)\n    let path = this.path\n    files.forEach(function (file) {\n      let fileName = file.relativePath\n      if (fileName === 'README.md' || fileName.indexOf('.md') === -1) {\n        return\n      }\n      let fileData = fs.readFileSync(path + fileName, 'utf8')\n      fs.appendFileSync('output.md', fileData + '\\n\\n')\n    })\n  }\n\n  buildContent () {\n    this.buildFunc()\n    let fileData = fs.readFileSync('output.md', 'utf-8')\n    fs.unlinkSync('output.md')\n\n    this.result = MdHelper.mdRender(fileData)\n    return this.result\n  }\n\n  output () {\n    fs.writeFileSync(this.workDir + '/export.html', this.result, 'utf-8')\n  }\n}\n\nexport default HtmlBuilder\n"],"file":"HtmlBuilder.js"}