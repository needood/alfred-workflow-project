{"version":3,"sources":["../../src/lib/search.ts"],"names":["findInFiles","require","Table","savePath","Config","getSavePath","buildTocBodyFun","index","decision","file","bodyString","lastStatus","StatusHelper","getLatestStatus","relativePath","newItem","push","search","keywords","find","then","results","files","result","substring","length","listGenerateBuilder","SearchListGenerateBuilder","i18n","Utils","getI18n","tableData","searchResults","setStart","setFiles","setEnd","setBody","build","console","log","table"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AANA,IAAIA,WAAW,GAAGC,OAAO,iBAAzB;;AACA,IAAIC,KAAK,GAAGD,OAAO,SAAnB;;AAOA,IAAIE,QAAQ,GAAGC,gBAAOC,WAAP,EAAf;;AAEA,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,UAAjD,EAAuE;AACrE,MAAIC,UAAU,GAAGC,sBAAaC,eAAb,CAA6BV,QAAQ,GAAGM,IAAI,CAACK,YAA7C,CAAjB;;AACA,MAAIC,OAAO,GAAG,CAACR,KAAK,GAAG,GAAR,GAAcC,QAAf,EAAyBG,UAAzB,CAAd;AACA,SAAOD,UAAU,CAACM,IAAX,CAAgBD,OAAhB,CAAP;AACD;;AAEM,SAASE,MAAT,CAAiBC,QAAjB,EAA2B;AAChClB,EAAAA,WAAW,CAACmB,IAAZ,CAAiB;AAAE,YAAQD,QAAV;AAAoB,aAAS;AAA7B,GAAjB,EAAsDf,QAAtD,EAAgE,MAAhE,EACGiB,IADH,CACQC,OAAO,IAAI;AACf,QAAIC,KAAe,GAAG,EAAtB;;AACA,SAAK,IAAIC,MAAT,IAAmBF,OAAnB,EAA4B;AAC1BC,MAAAA,KAAK,CAACN,IAAN,CAAW;AACTF,QAAAA,YAAY,EAAES,MAAM,CAACC,SAAP,CAAiBrB,QAAQ,CAACsB,MAA1B,EAAkCF,MAAM,CAACE,MAAzC;AADL,OAAX;AAGD;;AACD,QAAIC,mBAAmB,GAAG,IAAIC,kCAAJ,CAA8BxB,QAA9B,CAA1B;;AACA,QAAIyB,IAAI,GAAGC,eAAMC,OAAN,EAAX;;AACA,QAAIC,SAAS,GAAG,CAACH,IAAI,CAACpB,QAAN,EAAgBoB,IAAI,CAACjB,UAArB,CAAhB;AACA,QAAIqB,aAAa,GAAGN,mBAAmB,CACpCO,QADiB,CACRF,SADQ,EAEjBG,QAFiB,CAERZ,KAFQ,EAGjBa,MAHiB,GAIjBC,OAJiB,CAIT9B,eAJS,EAKjB+B,KALiB,EAApB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYrC,KAAK,CAACsC,KAAN,CAAYR,aAAZ,CAAZ;AAEA,WAAO9B,KAAK,CAACsC,KAAN,CAAYR,aAAZ,CAAP;AACD,GArBH;AAuBD","sourcesContent":["let findInFiles = require('find-in-files')\nlet Table = require('table')\n\nimport SearchListGenerateBuilder from './base/SearchListGenerateBuilder'\nimport Config from './Config'\nimport Utils from './utils'\nimport StatusHelper from './StatusHelper'\n\nlet savePath = Config.getSavePath()\n\nfunction buildTocBodyFun (index, decision, file, bodyString): string[] {\n  let lastStatus = StatusHelper.getLatestStatus(savePath + file.relativePath)\n  let newItem = [index + '.' + decision, lastStatus]\n  return bodyString.push(newItem)\n}\n\nexport function search (keywords) {\n  findInFiles.find({ 'term': keywords, 'flags': 'ig' }, savePath, '.md$')\n    .then(results => {\n      let files: object[] = []\n      for (let result in results) {\n        files.push({\n          relativePath: result.substring(savePath.length, result.length)\n        })\n      }\n      let listGenerateBuilder = new SearchListGenerateBuilder(savePath)\n      let i18n = Utils.getI18n()\n      let tableData = [i18n.decision, i18n.lastStatus]\n      let searchResults = listGenerateBuilder\n        .setStart(tableData)\n        .setFiles(files)\n        .setEnd()\n        .setBody(buildTocBodyFun)\n        .build()\n\n      console.log(Table.table(searchResults))\n\n      return Table.table(searchResults)\n    })\n\n}\n"],"file":"search.js"}