{"version":3,"sources":["../../src/lib/status.ts"],"names":["inquirer","require","path","Config","getSavePath","i18n","Utils","getI18n","status","index","_status","fileName","StatusHelper","getLatestStatus","statusList","statusStr","split","setStatus","type","process","stdout","write","prompt","name","message","choices","then","answer"],"mappings":";;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AANA,IAAIA,QAAQ,GAAGC,OAAO,YAAtB;;AAQA,IAAIC,IAAI,GAAGC,gBAAOC,WAAP,EAAX;;AACA,IAAIC,IAAI,GAAGC,eAAMC,OAAN,EAAX;;AAGO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAuC;AAC5C,MAAIC,QAAQ,GAAG,6BAAkBF,KAAlB,CAAf;;AACA,MAAID,MAAM,GAAGI,sBAAaC,eAAb,CAA6BX,IAAI,GAAGS,QAApC,CAAb;;AACA,MAAIG,UAAU,GAAGT,IAAI,CAACU,SAAL,CAAeC,KAAf,CAAqB,GAArB,CAAjB;;AACA,MAAGN,OAAH,EAAW;AACTE,0BAAaK,SAAb,CAAuBf,IAAI,GAAGS,QAA9B,EAAwCD,OAAxC;;AACA,QAAMQ,IAAI,GAAG,4BAAb;;AACA,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBC,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB,IAArB;AACD;;AACD;AACD;;AACDrB,EAAAA,QAAQ,CAACsB,MAAT,CAAgB,CAAC;AACfJ,IAAAA,IAAI,EAAE,MADS;AAEfK,IAAAA,IAAI,EAAE,QAFS;AAGfC,IAAAA,OAAO,EAAG,GAAEb,QAAS,IAAGH,MAAO,eAHhB;AAIfiB,IAAAA,OAAO,EAAEX;AAJM,GAAD,CAAhB,EAKIY,IALJ,CAKSC,MAAM,IAAI;AACjBf,0BAAaK,SAAb,CAAuBf,IAAI,GAAGS,QAA9B,EAAwCgB,MAAM,CAACnB,MAA/C;AACD,GAPD;AAQD","sourcesContent":["let inquirer = require('inquirer')\n\nimport Utils from './utils'\nimport StatusHelper from './StatusHelper'\nimport Config from './Config'\nimport { getAllFilesName } from './file';\nimport { getPrintFormat } from './print';\n\nlet path = Config.getSavePath()\nlet i18n = Utils.getI18n()\n\n\nexport function status(index, _status?): void {\n  let fileName = getAllFilesName()[index]\n  let status = StatusHelper.getLatestStatus(path + fileName)\n  let statusList = i18n.statusStr.split('/')\n  if(_status){\n    StatusHelper.setStatus(path + fileName, _status)\n    const type = getPrintFormat()\n    if (type === 'alfred') {\n      process.stdout.write('ok')\n    }\n    return \n  }\n  inquirer.prompt([{\n    type: 'list',\n    name: 'status',\n    message: `${fileName}(${status}) new status:`,\n    choices: statusList\n  }]).then(answer => {\n    StatusHelper.setStatus(path + fileName, answer.status)\n  })\n}\n"],"file":"status.js"}