{"version":3,"sources":["../../../src/lib/helpers/MdHelper.ts"],"names":["toc","require","Remarkable","mdRender","fileData","lastH1Index","md","use","remarkable","renderer","rules","heading_open","tokens","idx","content","hLevel","split","slugify","mdToc","tocHtml","render","contentHtml","MdHelper"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,gBAAjB;;AACA,IAAIC,UAAU,GAAGD,OAAO,cAAxB;;AAEO,SAASE,QAAT,CAAmBC,QAAnB,EAA6B;AAClC,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,EAAE,GAAG,IAAIJ,UAAJ,GACNK,GADM,CACFC,UAAU,IAAI;AACjBA,IAAAA,UAAU,CAACC,QAAX,CAAoBC,KAApB,CAA0BC,YAA1B,GAAyC,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;AAC9D,UAAIC,OAAO,GAAGF,MAAM,CAACC,GAAG,GAAG,CAAP,CAAN,CAAgBC,OAA9B;;AACA,UAAIF,MAAM,CAACC,GAAD,CAAN,CAAYE,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BV,QAAAA,WAAW,GAAGS,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoB,CAApB,IAAyB,CAAvC;AACA,eAAO,OAAOJ,MAAM,CAACC,GAAD,CAAN,CAAYE,MAAnB,GAA4B,MAA5B,GAAqCf,GAAG,CAACiB,OAAJ,CAAYH,OAAZ,CAArC,GAA4D,GAAnE;AACD,OAHD,MAGO;AACL,eAAO,OAAOF,MAAM,CAACC,GAAD,CAAN,CAAYE,MAAnB,GAA4B,MAA5B,GAAqCf,GAAG,CAACiB,OAAJ,CAAYH,OAAO,GAAG,GAAV,GAAgBT,WAA5B,CAArC,GAAgF,GAAvF;AACD;AACF,KARD;AASD,GAXM,CAAT;AAaA,MAAIa,KAAK,GAAGlB,GAAG,CAACI,QAAD,CAAH,CAAcU,OAA1B;AACA,MAAIK,OAAO,GAAGb,EAAE,CAACc,MAAH,CAAUF,KAAV,CAAd;AACA,MAAIG,WAAW,GAAGf,EAAE,CAACc,MAAH,CAAUhB,QAAV,CAAlB;AACA,SAAO,4BAAWe,OAAX,EAAoBE,WAApB,CAAP;AACD;;AAED,IAAIC,QAAQ,GAAG;AACbnB,EAAAA,QAAQ,EAAEA;AADG,CAAf;eAIemB,Q","sourcesContent":["import { htmlRender } from './htmlRender'\n\nlet toc = require('markdown-toc')\nlet Remarkable = require('remarkable')\n\nexport function mdRender (fileData) {\n  let lastH1Index = 0\n  let md = new Remarkable()\n    .use(remarkable => {\n      remarkable.renderer.rules.heading_open = function (tokens, idx) {\n        let content = tokens[idx + 1].content\n        if (tokens[idx].hLevel === 1) {\n          lastH1Index = content.split('. ')[0] - 1\n          return '<h' + tokens[idx].hLevel + ' id=' + toc.slugify(content) + '>'\n        } else {\n          return '<h' + tokens[idx].hLevel + ' id=' + toc.slugify(content + ' ' + lastH1Index) + '>'\n        }\n      }\n    })\n\n  let mdToc = toc(fileData).content\n  let tocHtml = md.render(mdToc)\n  let contentHtml = md.render(fileData)\n  return htmlRender(tocHtml, contentHtml)\n}\n\nlet MdHelper = {\n  mdRender: mdRender\n}\n\nexport default MdHelper\n"],"file":"MdHelper.js"}