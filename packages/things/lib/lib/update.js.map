{"version":3,"sources":["../../src/lib/update.ts"],"names":["walkSync","require","fs","savePath","Config","getSavePath","generateNewFileName","newIndex","title","indexString","Utils","createIndexByNumber","decisionInfile","generateFileName","updateNameByTitle","files","forEach","file","fileName","relativePath","fileData","readFileSync","firstLine","split","replace","indexRegex","exec","oldIndex","getIndexByString","parseInt","newFileName","console","log","renameSync","updateToc","toc","output","writeFileSync","update"],"mappings":";;;;;;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AAPA;AACA,IAAIA,QAAQ,GAAGC,OAAO,aAAtB;;AACA,IAAIC,EAAE,GAAGD,OAAO,MAAhB;;AAOA,IAAIE,QAAQ,GAAGC,gBAAOC,WAAP,EAAf;;AAEA,SAASC,mBAAT,CAA8BC,QAA9B,EAAgDC,KAAhD,EAAqE;AACnE,MAAIC,WAAW,GAAGC,eAAMC,mBAAN,CAA0BJ,QAA1B,CAAlB;;AACA,MAAIK,cAAc,GAAGF,eAAMG,gBAAN,CAAuBL,KAAvB,CAArB;;AACA,SAAOC,WAAW,GAAG,GAAd,GAAoBG,cAApB,GAAqC,KAA5C;AACD;;AAED,SAASE,iBAAT,GAAoC;AAClC,MAAIC,KAAK,GAAG,qBAAZ;AAEAA,EAAAA,KAAK,CAACC,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5B,QAAIC,QAAQ,GAAGD,IAAI,CAACE,YAApB;AACA,QAAIC,QAAQ,GAAGlB,EAAE,CAACmB,YAAH,CAAgBlB,QAAQ,GAAGe,QAA3B,EAAqC,MAArC,CAAf;AACA,QAAII,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAhB;AACA,QAAIf,KAAK,GAAGc,SAAS,CAACE,OAAV,CAAkB,aAAlB,EAAiC,EAAjC,CAAZ;AACA,QAAIC,UAAU,GAAG,eAAeC,IAAf,CAAoBJ,SAApB,CAAjB;AACA,QAAIK,QAAJ;;AACA,QAAI,CAACF,UAAL,EAAiB;AACfE,MAAAA,QAAQ,GAAGjB,eAAMkB,gBAAN,CAAuBV,QAAvB,CAAX;;AACA,UAAI,CAACS,QAAL,EAAe;AACb;AACD;AACF,KALD,MAKO;AACLA,MAAAA,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAArB;AACD;;AAED,QAAIlB,QAAQ,GAAGsB,QAAQ,CAACF,QAAD,EAAW,EAAX,CAAvB;AACA,QAAIG,WAAW,GAAGxB,mBAAmB,CAACC,QAAD,EAAWC,KAAX,CAArC;;AACA,QAAIU,QAAQ,KAAKY,WAAjB,EAA8B;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,GAAG,MAAX,GAAoBY,WAAhC;AACA5B,MAAAA,EAAE,CAAC+B,UAAH,CAAc9B,QAAQ,GAAGe,QAAzB,EAAmCf,QAAQ,GAAG2B,WAA9C;AACD;AACF,GAtBD;AAuBD;;AAED,SAASI,SAAT,GAA4B;AAC1B,MAAIC,GAAG,GAAG,wBAAS,KAAT,EAAgB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAhB,CAAV;AACAlC,EAAAA,EAAE,CAACmC,aAAH,CAAiBlC,QAAQ,GAAG,WAA5B,EAAyCgC,GAAzC;AACD;;AAEM,SAASG,MAAT,GAAyB;AAC9BP,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAlB,EAAAA,iBAAiB;AACjBiB,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAE,EAAAA,SAAS;AACV","sourcesContent":["///<reference path=\"generate.ts\"/>\nlet walkSync = require('walk-sync')\nlet fs = require('fs')\n\nimport Utils from './utils'\nimport { generate } from './generate'\nimport Config from './Config'\nimport { getFiles } from './file';\n\nlet savePath = Config.getSavePath()\n\nfunction generateNewFileName (newIndex: number, title: string | any) {\n  let indexString = Utils.createIndexByNumber(newIndex)\n  let decisionInfile = Utils.generateFileName(title)\n  return indexString + '-' + decisionInfile + '.md'\n}\n\nfunction updateNameByTitle (): void {\n  let files = getFiles()\n\n  files.forEach(function (file) {\n    let fileName = file.relativePath\n    let fileData = fs.readFileSync(savePath + fileName, 'utf8')\n    let firstLine = fileData.split('\\n')[0]\n    let title = firstLine.replace(/#\\s\\d+\\.\\s/g, '')\n    let indexRegex = /#\\s(\\d+)\\.\\s/.exec(firstLine)\n    let oldIndex\n    if (!indexRegex) {\n      oldIndex = Utils.getIndexByString(fileName)\n      if (!oldIndex) {\n        return\n      }\n    } else {\n      oldIndex = indexRegex[1]\n    }\n\n    let newIndex = parseInt(oldIndex, 10)\n    let newFileName = generateNewFileName(newIndex, title)\n    if (fileName !== newFileName) {\n      console.log(fileName + ' -> ' + newFileName)\n      fs.renameSync(savePath + fileName, savePath + newFileName)\n    }\n  })\n}\n\nfunction updateToc (): void {\n  let toc = generate('toc', { output: false })\n  fs.writeFileSync(savePath + 'README.md', toc)\n}\n\nexport function update (): void {\n  console.log('update decisions ...')\n  updateNameByTitle()\n  console.log('update adr toc ...')\n  updateToc()\n}\n"],"file":"update.js"}