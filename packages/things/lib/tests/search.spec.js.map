{"version":3,"sources":["../../src/tests/search.spec.ts"],"names":["sinon","require","fs","walkSync","findInFiles","Utils","ADR","Config","adrTemplate","adrOptions","JSON","stringify","path","language","t","findSpy","stub","returns","then","cb","ADRGetSavePathSpy","i18nSpy","decision","modifiedDate","lastStatus","logSavePath","consoleSpy","console","fsReadSpy","onCall","entriesSpy","relativePath","basePath","mode","size","mtime","search","deepEqual","calledWith","restore"],"mappings":";;;;AAKA;;AACA;;AANA,IAAIA,KAAK,GAAGC,OAAO,SAAnB;;AACA,IAAIC,EAAE,GAAGD,OAAO,MAAhB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,aAAtB;;AACA,IAAIG,WAAW,GAAGH,OAAO,iBAAzB;;AAKA,IAAII,KAAK,GAAGC,aAAID,KAAhB;AACA,IAAIE,MAAM,GAAGD,aAAIC,MAAjB;AAEA,IAAIC,WAAW,GAAI;;;;;;;;;CAAnB;AAWA,IAAIC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC9BC,EAAAA,IAAI,EAAE,IADwB;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAAf,CAAjB;AAKA,kBAAK,WAAL,EAAkBC,CAAC,IAAI;AACrB,MAAIC,OAAO,GAAGf,KAAK,CAACgB,IAAN,CAAWZ,WAAX,EAAwB,MAAxB,EAAgCa,OAAhC,CAAwC;AACpDC,IAAAA,IAAI,EAAEC,EAAE,IAAI;AACVA,MAAAA,EAAE,CAAC;AAAE,oCAA4B;AAA9B,OAAD,CAAF;AACD;AAHmD,GAAxC,CAAd;AAKA,MAAIC,iBAAiB,GAAGpB,KAAK,CAACgB,IAAN,CAAWT,MAAX,EAAmB,aAAnB,EAAkCU,OAAlC,CAA0C,IAA1C,CAAxB;AACA,MAAII,OAAO,GAAGrB,KAAK,CAACgB,IAAN,CAAWX,KAAX,EAAkB,SAAlB,EAA6BY,OAA7B,CAAqC;AACjDK,IAAAA,QAAQ,EAAE,IADuC;AAEjDC,IAAAA,YAAY,EAAE,QAFmC;AAGjDC,IAAAA,UAAU,EAAE,MAHqC;AAIjDC,IAAAA,WAAW,EAAE;AAJoC,GAArC,CAAd;AAMA,MAAIC,UAAU,GAAG1B,KAAK,CAACgB,IAAN,CAAWW,OAAX,EAAoB,KAApB,CAAjB;AACA,MAAIC,SAAS,GAAG5B,KAAK,CAACgB,IAAN,CAAWd,EAAX,EAAe,cAAf,EACb2B,MADa,CACN,CADM,EACHZ,OADG,CACKT,WADL,EAEbqB,MAFa,CAEN,CAFM,EAEHZ,OAFG,CAEKT,WAFL,EAGbqB,MAHa,CAGN,CAHM,EAGHZ,OAHG,CAGKP,IAAI,CAACC,SAAL,CAAeF,UAAf,CAHL,EAIboB,MAJa,CAIN,CAJM,EAIHZ,OAJG,CAIKP,IAAI,CAACC,SAAL,CAAeF,UAAf,CAJL,CAAhB;AAKA,MAAIqB,UAAU,GAAG9B,KAAK,CAACgB,IAAN,CAAWb,QAAX,EAAqB,SAArB,EAAgCc,OAAhC,CAAwC,CAAC;AACxDc,IAAAA,YAAY,EAAE,iBAD0C;AAExDC,IAAAA,QAAQ,EAAE,sCAF8C;AAGxDC,IAAAA,IAAI,EAAE,KAHkD;AAIxDC,IAAAA,IAAI,EAAE,GAJkD;AAKxDC,IAAAA,KAAK,EAAE;AALiD,GAAD,CAAxC,CAAjB;;AAQA7B,eAAI8B,MAAJ,CAAW,IAAX;;AACAtB,EAAAA,CAAC,CAACuB,SAAF,CAAYX,UAAU,CAACY,UAAX,CACT;;;;;CADS,CAAZ,EAME,IANF;AAOAvB,EAAAA,OAAO,CAACwB,OAAR;AACAnB,EAAAA,iBAAiB,CAACmB,OAAlB;AACAT,EAAAA,UAAU,CAACS,OAAX;AACAb,EAAAA,UAAU,CAACa,OAAX;AACAX,EAAAA,SAAS,CAACW,OAAV;AACAlB,EAAAA,OAAO,CAACkB,OAAR;AACD,CAzCD","sourcesContent":["let sinon = require('sinon')\nlet fs = require('fs')\nlet walkSync = require('walk-sync')\nlet findInFiles = require('find-in-files')\n\nimport test from 'ava'\nimport ADR from 'adr'\n\nlet Utils = ADR.Utils\nlet Config = ADR.Config\n\nlet adrTemplate = `# 1. 编写完整的单元测试\n\n日期: 2017/11/22\n\n## 状态\n\n2017-11-22 提议\n\n2017-11-26 已完成\n`\n\nlet adrOptions = JSON.stringify({\n  path: './',\n  language: 'zh-cn'\n})\n\ntest('ADR: list', t => {\n  let findSpy = sinon.stub(findInFiles, 'find').returns({\n    then: cb => {\n      cb({ 'docs/adr/001-filename.md': {} })\n    }\n  })\n  let ADRGetSavePathSpy = sinon.stub(Config, 'getSavePath').returns('./')\n  let i18nSpy = sinon.stub(Utils, 'getI18n').returns({\n    decision: '决策',\n    modifiedDate: '上次修改时间',\n    lastStatus: '最后状态',\n    logSavePath: '保存路径：'\n  })\n  let consoleSpy = sinon.stub(console, 'log')\n  let fsReadSpy = sinon.stub(fs, 'readFileSync')\n    .onCall(0).returns(adrTemplate)\n    .onCall(1).returns(adrTemplate)\n    .onCall(2).returns(JSON.stringify(adrOptions))\n    .onCall(3).returns(JSON.stringify(adrOptions))\n  let entriesSpy = sinon.stub(walkSync, 'entries').returns([{\n    relativePath: '001-filename.md',\n    basePath: '/Users/fdhuang/learing/adr/docs/adr/',\n    mode: 33188,\n    size: 246,\n    mtime: 1511435254653 }\n  ])\n\n  ADR.search('测试')\n  t.deepEqual(consoleSpy.calledWith(\n    `╔════════════╤═══════════════════╗\n║ 决策       │ 最后状态          ║\n╟────────────┼───────────────────╢\n║ 1.filename │ 2017-11-26 已完成 ║\n╚════════════╧═══════════════════╝\n`), true)\n  findSpy.restore()\n  ADRGetSavePathSpy.restore()\n  entriesSpy.restore()\n  consoleSpy.restore()\n  fsReadSpy.restore()\n  i18nSpy.restore()\n})\n"],"file":"search.spec.js"}