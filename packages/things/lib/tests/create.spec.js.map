{"version":3,"sources":["../../src/tests/create.spec.ts"],"names":["sinon","require","fs","mkdirp","walkSync","Config","ADR","adrTemplate","adrOptions","JSON","stringify","path","language","t","consoleSpy","stub","console","mkdirpSync","generateSpy","fsWriteSyncSpy","entriesSpy","returns","relativePath","basePath","mode","size","mtime","fsExistSpy","fsReadSpy","onCall","ADRGetSavePathSpy","create","deepEqual","calledWith","callCount","restore"],"mappings":"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","sourcesContent":["let sinon = require('sinon')\nlet fs = require('fs')\nlet mkdirp = require('mkdirp')\nlet walkSync = require('walk-sync')\n\nimport test from 'ava'\n\nimport ADR from 'adr'\nlet Config = ADR.Config\n\nlet adrTemplate = `# {NUMBER}. {TITLE}\n\n日期: {DATE}\n\n## 状态\n\n列表：提议/通过/完成/已弃用/已取代\n\n{DATE} 提议`\nlet adrOptions = JSON.stringify({\n  path: './',\n  language: 'en'\n})\n\ntest('ADR: create', t => {\n  let consoleSpy = sinon.stub(console, 'log')\n  let mkdirpSync = sinon.stub(mkdirp, 'sync')\n  let generateSpy = sinon.stub(ADR, 'generate')\n  let fsWriteSyncSpy = sinon.stub(fs, 'writeFileSync')\n  let entriesSpy = sinon.stub(walkSync, 'entries').returns([\n    {\n      relativePath: '001-编写完整的单元测试.md',\n      basePath: './',\n      mode: 33188,\n      size: 246,\n      mtime: 1511435254653\n    }\n  ])\n  let fsExistSpy = sinon.stub(fs, 'existsSync').returns(true)\n  let fsReadSpy = sinon.stub(fs, 'readFileSync')\n    .onCall(0).returns(JSON.stringify(adrOptions))\n    .onCall(1).returns(JSON.stringify(adrOptions))\n    .onCall(2).returns(JSON.stringify(adrOptions))\n    .onCall(3).returns(JSON.stringify(adrOptions))\n    .onCall(4).returns(JSON.stringify(adrOptions))\n    .onCall(5).returns(adrTemplate)\n  let ADRGetSavePathSpy = sinon.stub(Config, 'getSavePath').returns('./')\n\n  ADR.create('create')\n  // create\n  t.deepEqual(fsWriteSyncSpy.calledWith('./0002-create.md'), true)\n  // TOC\n  t.deepEqual(fsWriteSyncSpy.calledWith('./README.md'), true)\n  t.deepEqual(mkdirpSync.callCount, 1)\n\n  fsWriteSyncSpy.restore()\n  ADRGetSavePathSpy.restore()\n  fsExistSpy.restore()\n  fsReadSpy.restore()\n  entriesSpy.restore()\n  consoleSpy.restore()\n  generateSpy.restore()\n  mkdirpSync.restore()\n})\n"],"file":"create.spec.js"}